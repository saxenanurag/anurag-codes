<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Anurag&#39;s Blog</title>
    <link>/tags/code/</link>
    <description>Recent content in code on Anurag&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Anurag Saxena</copyright>
    <lastBuildDate>Fri, 09 Nov 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TIL: Creating a new file or folder in NerdTree</title>
      <link>/posts/til-creating-a-new-file-or-folder-in-nerdtree/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/posts/til-creating-a-new-file-or-folder-in-nerdtree/</guid>
      <description>To create a new file or folder in NerdTree, bring up the NerdTree menu by typing m. This brings up a multiple options including:&#xA;(a)dd a childnode (m)ove the current node (d)elete the current node (r)eveal in Finder the current node (o)pen the current node with system editor (q)uicklook the current node (c)opy the current node (l)ist the current node So now you press a and can type in the file name or the folder that you want to create.</description>
    </item>
    <item>
      <title>pydoc</title>
      <link>/posts/pydoc/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/posts/pydoc/</guid>
      <description>I gave a talk recently at the Cleveland Python Meetup on pydoc. Here is the notebook explaining it all: https://github.com/CLEpy/CLEpy-MotM/blob/master/pydoc/pydoc.ipynb</description>
    </item>
    <item>
      <title>Git stash</title>
      <link>/posts/git-stash/</link>
      <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate>
      <guid>/posts/git-stash/</guid>
      <description>Git stash allows you to save your changes to a repo, without any commits, and go back to the clean state that your repo was in since the last commit. I use stash when I have to pull changes from origin into my code, but I don&amp;rsquo;t want to commit any of my own changes. Stash allows to manage merge conflicts as well. You can use stash when you want to switch branches.</description>
    </item>
    <item>
      <title>Microsoft Github Acquisition</title>
      <link>/posts/microsoft-github-acquisition/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      <guid>/posts/microsoft-github-acquisition/</guid>
      <description>Thoughts $7.5 billion is huge. A big part of that number includes value of open source projects. It is the open source projects that made Github what it is and brought the community together. Github made people recognize their potential, by having their work be shared and collaborated on an open, free platform. $7.5 billion is huge. Microsoft paid good money for this acquisition. I do not know what the ultimate goal is here, but it is an investment into the future of Github, and I am cautiously optimistic - just like a lot of people.</description>
    </item>
    <item>
      <title>How I Merge</title>
      <link>/posts/how-i-merge/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      <guid>/posts/how-i-merge/</guid>
      <description>Stage the files&#xA;git add &amp;lt;files&amp;gt; Commit the files&#xA;git commit -m &amp;#34;&amp;lt;message subject&amp;gt;&amp;#34; -m &amp;#34;&amp;lt;message body, if needed&amp;gt;&amp;#34; Pull the master&#xA;git pull origin master Merge any conflicts and commit. Then,&#xA;git push origin master Profit!</description>
    </item>
  </channel>
</rss>
